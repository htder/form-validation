(()=>{const r={formContainer:document.querySelector("form"),email:document.getElementById("email-input"),country:document.getElementById("country-input"),zipCode:document.getElementById("code-input"),password:document.getElementById("password-input"),passwordConfirm:document.getElementById("password-confirm-input")},e={countryError:document.querySelector(".country-error"),zipCodeError:document.querySelector(".code-error"),passwordError:document.querySelector(".password-error"),passwordConfirmError:document.querySelector(".password-confirm-error"),emailError:document.querySelector(".email-error")},t=r=>{r.validity.valueMissing?e.emailError.textContent="You need to enter and e-mail address":r.validity.typeMismatch&&(e.emailError.textContent="Entered value needs to be an email address"),e.emailError.className="error active"},o=r=>{r.validity.valueMissing?e.countryError.textContent="You need to enter a country":r.validity.tooShort?e.countryError.textContent=`Country should be at least ${r.minLength} characters`:r.validity.tooLong&&(e.countryError.textContent=`Country should be no longer than ${r.maxLength} characters`),e.countryError.className="error active"},n=r=>{r.validity.valueMissing?e.zipCodeError.textContent="You need to enter a Zipcode":r.validity.tooLong?e.zipCodeError.textContent=`Zipcode should be no longer than ${r.maxLength} characters`:r.validity.patternMismatch&&(e.zipCodeError.textContent=`${r.value} is not a valid Zipcode`),r.validity.tooShort&&(e.zipCodeError.textContent=`Zipcode should be at least ${r.minLength} characters`),e.zipCodeError.className="error active"},a=r=>{r.validity.valueMissing?e.passwordError.textContent="You need to enter a password":r.validity.tooShort?e.passwordError.textContent=`Your password should be at least ${r.minLength} characters`:r.validity.tooLong&&(e.passwordError.textContent=`You password should be no longer than ${r.maxLength} characters`),e.passwordError.className="error active"},s=()=>{e.passwordConfirmError.textContent="Passwords do not match",e.passwordConfirmError.className="error active"},i=r=>{r.validity.valid?(e.emailError.textContent="",e.emailError.className="error"):t(r)},d=r=>{r.validity.valid?(e.countryError.textContent="",e.countryError.className="error"):o(r)},l=r=>{r.validity.valid?(e.zipCodeError.textContent="",e.zipCodeError.className="error"):n(r)},c=r=>{r.validity.valid?(e.passwordError.textContent="",e.passwordError.className="error"):a(r)},u=(r,t)=>{r.value===t.value?(e.passwordConfirmError.textContent="",e.passwordConfirmError.className="error"):s(r,t)};r.email.addEventListener("input",(()=>{i(r.email)})),r.country.addEventListener("input",(()=>{d(r.country)})),r.zipCode.addEventListener("input",(()=>{l(r.zipCode)})),r.password.addEventListener("input",(()=>{c(r.password)})),r.passwordConfirm.addEventListener("input",(()=>{u(r.passwordConfirm,r.password)})),r.formContainer.addEventListener("submit",(r=>{r.preventDefault(),console.log(r)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,